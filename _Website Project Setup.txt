----------------------------- PROJECT SETUP ---------------------------
Install .NET Framework 4.5.2 Multi-Targeting Pack
Install Azure SDK (+http://azure.microsoft.com/en-us/downloads/)
--------------
See "Deployment Sequence.txt" in the Database project.
--------------
Visual Studio can create an initial entry in applicationhost.config for "localhost" only. Thus VS is unable to open the project in Visual Studio for the very first time.
Option 1.
Edit temporarily <IISUrl> in Website.csproj. 
<IISUrl>http://localhost:2454/</IISUrl>
Then edit the added entry as described in Option 2.
---
Option 2. 
Add the website to C:\Users\Andrey\Documents\IISExpress\config\applicationhost.config manually. Visual Studio can create automatically only 'localhost' sites.
<site name="Website" id="1">
    <application path="/" applicationPool="Clr4IntegratedAppPool">
        <virtualDirectory path="/" physicalPath="C:\Users\Andrey\Documents\Dignicom\Runnymede\Website" />
    </application>
    <bindings>
        <binding protocol="http" bindingInformation="*:80:deva.englisharium.com" />
        <binding protocol="https" bindingInformation="*:443:deva.englisharium.com" />
    </bindings>
</site>

Go to the project's Properties, Web tab, edit Project Url as "http://deva.englisharium.com/". Press "Create Virtual Dirtectory".
Make sure <IISExpressSSLPort>443</IISExpressSSLPort> in Website.csproj.
"netsh http add urlacl" and is not needed since Visual Studio can start only "localhost" websites with IIS Express in the user mode. We will run Visual Studio as Administrator.
Port 443 may be pre-occupied by another app. use "netstat -ano" to find out.
--------------
Use GUI to open firewall. Alternatively in cmd:
netsh firewall add portopening TCP 80 IISExpressWeb enable ALL 
netsh firewall add portopening TCP 443 IISExpressWeb enable ALL 
--------------
Option 1. Add to C:\Windows\System32\drivers\etc\hosts   127.0.0.1 deva.englisharium.com
Option 2. "Alias" record using noip.com. deva.englisharium.com -> devaenglisharium.ddns.net -> 192.168.X.X
--------------
netsh http show sslcert > D:\Downloads\01.txt
Generate a certificte (Pluralsight CelfCert is an option. Downside is that Chrome warns on SHA1 used, it likes SHA2). 
Run mmc.exe. Import the certificate into Computer (not Current User) account "Certificates (Local Computer)\Personal\Certificates"
netsh http add sslcert ipport=0.0.0.0:443 appid={00000000-0000-0000-0000-000000000000} certhash=YOUR_CERT_THUMBPRINT_HERE
To satisfy browsers, import the cert into "Current User\Trusted Root Certification Authorities"
--------------
Run Visual Studio as Administrator. VS can start only "localhost" websites with IIS Express in the user mode.
--------------
-------------------------------- BOWER  ---------------------------------------
Install node.js (nodejs.org), it will install npm as well.
Install Git (git-scm.com). Choose “Run Git from the Windows Command Prompt” to adjust PATH during installation. Restart cmd after installation.
Install bower (bower.io).
Install github.com/blittle/bower-installer
--------------
cd C:\Users\Andrey\Documents\GitHub\Runnymede\Website
bower list
bower install -p -S <package>
bower update <name>
bower-installer
rem +http://joshbranchaud.com/blog/2014/02/19/Managing-Single-Files-With-Bower.html
rem +https://github.com/blittle/bower-installer  /* You can specify a folder and get all files inside it preserving its folder structure. */

!!! angular.d.ts is broken. We use the version from 2/2/2015.





